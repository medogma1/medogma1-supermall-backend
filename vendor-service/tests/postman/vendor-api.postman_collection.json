{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
    "name": "Vendor API Tests",
    "description": "مجموعة اختبارات API لخدمة البائعين",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "إنشاء بائع جديد",
      "item": [
        {
          "name": "إنشاء بائع جديد بنجاح",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// التحقق من كود الاستجابة",
                  "pm.test(\"يجب أن يكون كود الاستجابة 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "// التحقق من هيكل الاستجابة",
                  "pm.test(\"يجب أن تحتوي الاستجابة على رسالة نجاح\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData.message).to.include('created successfully');",
                  "});",
                  "",
                  "pm.test(\"يجب أن تحتوي الاستجابة على بيانات البائع\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('vendor');",
                  "    pm.expect(jsonData.vendor).to.have.property('id');",
                  "    pm.expect(jsonData.vendor).to.have.property('name');",
                  "    pm.expect(jsonData.vendor).to.have.property('email');",
                  "    pm.expect(jsonData.vendor).to.have.property('phone');",
                  "    pm.expect(jsonData.vendor).to.have.property('user_id');",
                  "    pm.expect(jsonData.vendor).to.have.property('business_type');",
                  "});",
                  "",
                  "// حفظ معرف البائع للاستخدام في الاختبارات اللاحقة",
                  "if (pm.response.json().vendor && pm.response.json().vendor.id) {",
                  "    pm.environment.set(\"vendor_id\", pm.response.json().vendor.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"تاجر اختبار\",\n    \"email\": \"test-vendor@example.com\",\n    \"phone\": \"0123456789\",\n    \"user_id\": 12345,\n    \"business_type\": \"retail\",\n    \"storeName\": \"متجر اختبار\",\n    \"storeDescription\": \"وصف متجر الاختبار\",\n    \"storeLogoUrl\": \"https://example.com/logo.png\",\n    \"contactEmail\": \"contact@example.com\",\n    \"contactPhone\": \"0123456789\",\n    \"storeAddress\": \"عنوان متجر الاختبار\",\n    \"country\": \"مصر\",\n    \"governorate\": \"القاهرة\",\n    \"nationalId\": \"12345678901234\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/vendors",
              "host": ["{{base_url}}"],
              "path": ["api", "vendors"]
            },
            "description": "إنشاء بائع جديد بنجاح مع بيانات صالحة"
          },
          "response": []
        },
        {
          "name": "فشل الإنشاء - حقول مطلوبة مفقودة",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// التحقق من كود الاستجابة",
                  "pm.test(\"يجب أن يكون كود الاستجابة 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "// التحقق من هيكل الاستجابة",
                  "pm.test(\"يجب أن تحتوي الاستجابة على رسالة خطأ\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData.message).to.include('required');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"storeName\": \"متجر اختبار\",\n    \"storeDescription\": \"وصف متجر الاختبار\",\n    \"storeLogoUrl\": \"https://example.com/logo.png\",\n    \"contactEmail\": \"contact@example.com\",\n    \"contactPhone\": \"0123456789\",\n    \"storeAddress\": \"عنوان متجر الاختبار\",\n    \"country\": \"مصر\",\n    \"governorate\": \"القاهرة\",\n    \"nationalId\": \"12345678901234\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/vendors",
              "host": ["{{base_url}}"],
              "path": ["api", "vendors"]
            },
            "description": "محاولة إنشاء بائع بدون الحقول المطلوبة"
          },
          "response": []
        },
        {
          "name": "فشل الإنشاء - معرف مستخدم غير صالح",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// التحقق من كود الاستجابة",
                  "pm.test(\"يجب أن يكون كود الاستجابة 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "// التحقق من هيكل الاستجابة",
                  "pm.test(\"يجب أن تحتوي الاستجابة على رسالة خطأ\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData.message).to.include('user_id must be a number');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"تاجر اختبار\",\n    \"email\": \"test-vendor@example.com\",\n    \"phone\": \"0123456789\",\n    \"user_id\": \"not-a-number\",\n    \"business_type\": \"retail\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/vendors",
              "host": ["{{base_url}}"],
              "path": ["api", "vendors"]
            },
            "description": "محاولة إنشاء بائع بمعرف مستخدم غير صالح"
          },
          "response": []
        },
        {
          "name": "فشل الإنشاء - بريد إلكتروني غير صالح",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// التحقق من كود الاستجابة",
                  "pm.test(\"يجب أن يكون كود الاستجابة 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "// التحقق من هيكل الاستجابة",
                  "pm.test(\"يجب أن تحتوي الاستجابة على رسالة خطأ\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData.message).to.include('Invalid vendor data');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"تاجر اختبار\",\n    \"email\": \"not-an-email\",\n    \"phone\": \"0123456789\",\n    \"user_id\": 12345,\n    \"business_type\": \"retail\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/vendors",
              "host": ["{{base_url}}"],
              "path": ["api", "vendors"]
            },
            "description": "محاولة إنشاء بائع ببريد إلكتروني غير صالح"
          },
          "response": []
        }
      ],
      "description": "اختبارات إنشاء بائع جديد"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ]
}